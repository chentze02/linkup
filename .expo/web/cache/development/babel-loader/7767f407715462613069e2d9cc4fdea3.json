{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nrequire(\"./environment/react-native-logs.fx\");\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _DevAppContainer = _interopRequireDefault(require(\"./environment/DevAppContainer\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nif (__DEV__) {\n  if (\n  _expoModulesCore.Platform.OS === 'web' &&\n  !('__fbBatchedBridgeConfig' in global)) {\n    Object.defineProperty(global, '__fbBatchedBridgeConfig', {\n      get: function get() {\n        throw new Error(\"Your web project is importing a module from 'react-native' instead of 'react-native-web'. Learn more: https://expo.fyi/fb-batched-bridge-config-web\");\n      }\n    });\n  }\n  _reactNative.AppRegistry.setWrapperComponentProvider(function () {\n    return _DevAppContainer.default;\n  });\n  var originalSetWrapperComponentProvider = _reactNative.AppRegistry.setWrapperComponentProvider;\n  _reactNative.AppRegistry.setWrapperComponentProvider = function (provider) {\n    function PatchedProviderComponent(props) {\n      var ProviderComponent = provider();\n      return React.createElement(_DevAppContainer.default, null, React.createElement(ProviderComponent, Object.assign({}, props)));\n    }\n    originalSetWrapperComponentProvider(function () {\n      return PatchedProviderComponent;\n    });\n  };\n}","map":{"version":3,"sources":["../src/Expo.fx.web.tsx"],"names":[],"mappings":";AAAA;AAEA;AACA;AACA;AAEA;AAA4D;AAAA;AAK5D,IAAI,OAAO,EAAE;EAEX;EAEE,yBAAQ,CAAC,EAAE,KAAK,KAAK;EAErB,EAAE,yBAAyB,IAAI,MAAM,CAAC,EACtC;IACA,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,yBAAyB,EAAE;MACvD,GAAG,iBAAA;QACD,MAAM,IAAI,KAAK,CACb,qJAAqJ,CACtJ;MACH;KACD,CAAC;EACH;EAID,wBAAW,CAAC,2BAA2B,CAAC;IAAA,OAAM,wBAAe;EAAA,EAAC;EAG9D,IAAM,mCAAmC,GAAG,wBAAW,CAAC,2BAA2B;EAGnF,wBAAW,CAAC,2BAA2B,GAAG,UAAC,QAAQ,EAAI;IACrD,SAAS,wBAAwB,CAAC,KAAU,EAAA;MAC1C,IAAM,iBAAiB,GAAG,QAAQ,EAAE;MAEpC,OACE,KAAA,CAAA,aAAA,CAAC,wBAAe,EAAA,IAAA,EACd,KAAA,CAAA,aAAA,CAAC,iBAAiB,oBAAK,KAAK,EAAI,CAChB;IAEtB;IAEA,mCAAmC,CAAC;MAAA,OAAM,wBAAwB;IAAA,EAAC;EACrE,CAAC;AACF","sourcesContent":["import './environment/react-native-logs.fx';\n\nimport { Platform } from 'expo-modules-core';\nimport * as React from 'react';\nimport { AppRegistry } from 'react-native';\n\nimport DevAppContainer from './environment/DevAppContainer';\n\n// When users dangerously import a file inside of react-native, it breaks the web alias.\n// This is one of the most common, and cryptic web errors that users encounter.\n// This conditional side-effect provides a more helpful error message for debugging.\nif (__DEV__) {\n  // Use a wrapper `__DEV__` to remove this entire block in production.\n  if (\n    // Only on web platforms.\n    Platform.OS === 'web' &&\n    // Skip mocking if someone is shimming this value out.\n    !('__fbBatchedBridgeConfig' in global)\n  ) {\n    Object.defineProperty(global, '__fbBatchedBridgeConfig', {\n      get() {\n        throw new Error(\n          \"Your web project is importing a module from 'react-native' instead of 'react-native-web'. Learn more: https://expo.fyi/fb-batched-bridge-config-web\"\n        );\n      },\n    });\n  }\n\n  // add the dev app container wrapper component to web\n  // @ts-ignore\n  AppRegistry.setWrapperComponentProvider(() => DevAppContainer);\n\n  // @ts-ignore\n  const originalSetWrapperComponentProvider = AppRegistry.setWrapperComponentProvider;\n\n  // @ts-ignore\n  AppRegistry.setWrapperComponentProvider = (provider) => {\n    function PatchedProviderComponent(props: any) {\n      const ProviderComponent = provider();\n\n      return (\n        <DevAppContainer>\n          <ProviderComponent {...props} />\n        </DevAppContainer>\n      );\n    }\n\n    originalSetWrapperComponentProvider(() => PatchedProviderComponent);\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}